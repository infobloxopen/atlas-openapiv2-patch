{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "OpenAPI V2 Atlas Patch Test2",
    "contact": {
      "name": "John Doe",
      "url": "https://github.com/infobloxprivate/atlas-contacts-app",
      "email": "jdoe@infoblox.com"
    },
    "version": "2.0"
  },
  "paths": {
    "/jeep/dimension": {
      "get": {
        "description": "Use this method to retrieve __Dimension__ objects",
        "tags": [
          "dimension"
        ],
        "summary": "Retrieve the dimensions.",
        "operationId": "dimensionList",
        "parameters": [
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be filtered by a logical expression string that includes JSON tag references to values in each resource, literal values, and logical operators. If a resource does not have the specified tag, its value is assumed to be null.\n\nLiteral values include numbers (integer and floating-point), and quoted (both single- or double-quoted) literal strings, and 'null'. The following operators are commonly used in filter expressions:\n\n|  Op   |  Description               | \n|  --   |  -----------               | \n|  ==   |  Equal                     | \n|  !=   |  Not Equal                 | \n|  \u003e    |  Greater Than              | \n|   \u003e=  |  Greater Than or Equal To  | \n|  \u003c    |  Less Than                 | \n|  \u003c=   |  Less Than or Equal To     | \n|  and  |  Logical AND               | \n|  ~    |  Matches Regex             | \n|  !~   |  Does Not Match Regex      | \n|  or   |  Logical OR                | \n|  not  |  Logical NOT               | \n|  ()   |  Groupping Operators       |\n\n\t\t\t\t\t\t",
            "name": "_filter",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer index (zero-origin) of the offset into a collection of resources. If omitted or null the value is assumed to be '0'.\n\n\t\t\t\t\t\t\t",
            "name": "_offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "\n\nThe integer number of resources to be returned in the response. The service may impose maximum value. If omitted the service may impose a default value.\n\n\t\t\t\t\t\t\t",
            "name": "_limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nThe service-defined string used to identify a page of resources. A null value indicates the first page.\n\n\t\t\t\t\t\t\t",
            "name": "_page_token",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "\n\nThis parameter controls whether the total record count is included in the response. If not specified, it defaults to false.\n\n\t\t\t\t\t\t\t",
            "name": "_is_total_size_needed",
            "in": "query"
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be sorted by their JSON tags. For a 'flat' resource, the tag name is straightforward. If sorting is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, its value is assumed to be null.)\n\nSpecify this parameter as a comma-separated list of JSON tag names. The sort direction can be specified by a suffix separated by whitespace before the tag name. The suffix 'asc' sorts the data in ascending order. The suffix 'desc' sorts the data in descending order. If no suffix is specified the data is sorted in ascending order.\n\n\t\t\t\t\t\t",
            "name": "_order_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This parameter is used for sorting by tags.",
            "name": "_torder_by",
            "in": "query"
          },
          {
            "type": "string",
            "description": "This parameter is used for filtering by tags.",
            "name": "_tfilter",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/jeepServiceListDimensionResponse"
            }
          }
        }
      },
      "post": {
        "description": "Use this method to create an __Dimension__ object.",
        "tags": [
          "dimension"
        ],
        "summary": "Create the dimension.",
        "operationId": "dimensionCreate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/jeepServiceDimension"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "POST operation response",
            "schema": {
              "$ref": "#/definitions/jeepServiceCreateDimensionResponse"
            }
          }
        }
      }
    },
    "/jeep/dimension/{id}": {
      "get": {
        "description": "Use this method to retrieve an __Dimension__ object.",
        "tags": [
          "dimension"
        ],
        "summary": "Retrieve the dimension.",
        "operationId": "dimensionRead",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "\n\nA collection of response resources can be transformed by specifying a set of JSON tags to be returned. For a “flat” resource, the tag name is straightforward. If field selection is allowed on non-flat hierarchical resources, the service should implement a qualified naming scheme such as dot-qualification to reference data down the hierarchy. If a resource does not have the specified tag, the tag does not appear in the output resource.\n\nSpecify this parameter as a comma-separated list of JSON tag names.\n\n\t\t\t\t\t\t",
            "name": "_fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "GET operation response",
            "schema": {
              "$ref": "#/definitions/jeepServiceReadDimensionResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Use this method to move an __Dimension__ object to the trash.",
        "tags": [
          "dimension"
        ],
        "summary": "Move the dimension to the recycle bin.",
        "operationId": "dimensionDelete",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Use this method to update an __Dimension__ object.",
        "tags": [
          "dimension"
        ],
        "summary": "Update the dimension.",
        "operationId": "dimensionUpdate",
        "parameters": [
          {
            "type": "string",
            "description": "An application specific resource identity of a resource",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/jeepServiceDimension"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PATCH operation response",
            "schema": {
              "$ref": "#/definitions/jeepServiceUpdateDimensionResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "jeepServiceCreateDimensionResponse": {},
    "jeepServiceDimension": {
      "description": "An __Dimension__ object (_jeep/dimension_) specifies dimensions of a Jeep object",
      "type": "object",
      "title": "Dimension",
      "required": [
        "space",
        "address"
      ],
      "properties": {
        "comment": {
          "description": "The description for the dimension. May contain 0 to 1024 characters. Can include UTF-8.",
          "type": "string"
        },
        "created_at": {
          "description": "Time when the object has been created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "length": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "The name of the dimension. May contain 1 to 256 characters. Can include UTF-8.",
          "type": "string"
        },
        "tags": {
          "description": "The tags for the dimension in JSON format.",
          "type": "object",
          "additionalProperties": false
        },
        "tire_size": {
          "description": "size of tires.",
          "type": "string"
        },
        "updated_at": {
          "description": "Time when the object has been updated. Equals to _created_at_ if not updated after creation.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "width": {
          "type": "integer",
          "format": "int64",
          "maximum": 100,
          "minimum": 1
        }
      }
    },
    "jeepServiceListDimensionResponse": {
      "description": "The response format to retrieve __Dimension__ objects.",
      "type": "object",
      "title": "ListDimensionResponse",
      "properties": {
        "results": {
          "description": "A list of Dimension objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/jeepServiceDimension"
          }
        }
      }
    },
    "jeepServiceReadDimensionResponse": {
      "description": "The response format to retrieve the __Dimension__ object.",
      "type": "object",
      "title": "ReadDimensionResponse",
      "properties": {
        "result": {
          "description": "The Dimension object.",
          "$ref": "#/definitions/jeepServiceDimension"
        }
      }
    },
    "jeepServiceUpdateDimensionResponse": {}
  },
  "tags": [
    {
      "name": "JeepService"
    }
  ]
}